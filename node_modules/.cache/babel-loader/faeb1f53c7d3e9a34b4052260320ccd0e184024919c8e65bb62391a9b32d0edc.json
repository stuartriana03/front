{"ast":null,"code":"import back from \"./back.js\";\nclass crud {\n  async GET(resource) {\n    const token = localStorage.getItem(\"token\");\n    let bearer;\n    if (token === \"\") {\n      bearer = \"\";\n    } else {\n      bearer = `${token}`;\n    }\n    const data = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"aplication/json\",\n        \"x-auth-token\": bearer\n      }\n    };\n    const url = `${back.api.baseURL}${resource}`;\n    let response = await (await fetch(url, data)).json();\n    return response;\n  }\n  async POST(resource, body) {\n    const token = localStorage.getItem(\"token\");\n    let bearer;\n    if (token === \"\") {\n      bearer = \"\";\n    } else {\n      bearer = `${token}`;\n    }\n    const data = {\n      method: \"POST\",\n      body: JSON.stringify(body),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-auth-token\": bearer\n      }\n    };\n    const url = `${back.api.baseURL}${resource}`;\n    let response = await (await fetch(url, data)).json();\n    return response;\n  }\n  async PUT(resource, body) {\n    const token = localStorage.getItem(\"token\");\n    let bearer;\n    if (token === \"\") {\n      bearer = \"\";\n    } else {\n      bearer = `${token}`;\n    }\n    const data = {\n      method: 'PUT',\n      body: JSON.stringify(body),\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': bearer\n      }\n    };\n    const url = `${back.api.baseURL}${resource}`;\n    let response = await (await fetch(url, data)).json();\n    return response;\n  }\n  async DELETE(resource) {\n    const token = localStorage.getItem(\"token\");\n    let bearer;\n    if (token === \"\") {\n      bearer = \"\";\n    } else {\n      bearer = `${token}`;\n    }\n    const data = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-auth-token': bearer\n      }\n    };\n    const url = `${back.api.baseURL}${resource}`;\n    let response = await (await fetch(url, data)).json();\n    return response;\n  }\n}\nexport default new crud();","map":{"version":3,"names":["back","crud","GET","resource","token","localStorage","getItem","bearer","data","method","headers","url","api","baseURL","response","fetch","json","POST","body","JSON","stringify","PUT","DELETE"],"sources":["C:/Users/USER/Documents/Stuar Triana/React/my-app/src/conexiones/crud.js"],"sourcesContent":["import back from \"./back.js\";\r\n\r\nclass crud {\r\n  async GET(resource){\r\n    const token = localStorage.getItem(\"token\");\r\n    let bearer;\r\n    if(token===\"\"){\r\n      bearer=\"\";\r\n    } else {\r\n      bearer=`${token}`;\r\n    }\r\n\r\n    const data = {\r\n      method:\"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"aplication/json\",\r\n        \"x-auth-token\": bearer\r\n      }\r\n    }\r\n    const url = `${back.api.baseURL}${resource}`\r\n    let response =(await (await fetch(url, data)).json())\r\n    return response\r\n\r\n  }\r\n  async POST(resource, body){\r\n    const token = localStorage.getItem(\"token\");\r\n    let bearer;\r\n    if(token===\"\"){\r\n      bearer=\"\";\r\n    } else {\r\n      bearer= `${token}`;\r\n    }\r\n\r\n    const data= {\r\n      method: \"POST\",\r\n      body: JSON.stringify(body),\r\n      headers:{\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-auth-token\": bearer\r\n      }\r\n    }\r\n    \r\n    const url = `${back.api.baseURL}${resource}`\r\n    let response = (await (await fetch(url, data)).json())\r\n    return response\r\n  }\r\n  async PUT(resource, body){\r\n    const token = localStorage.getItem(\"token\");\r\n    let bearer;\r\n    if (token === \"\"){\r\n      bearer = \"\";\r\n    } else {\r\n      bearer = `${token}`;\r\n    }\r\n    const data = {\r\n      method:'PUT',\r\n      body: JSON.stringify(body),\r\n      headers: {\r\n        'Content-Type':'application/json',\r\n        'x-auth-token': bearer\r\n      }\r\n    }\r\n    const url = `${back.api.baseURL}${resource}`\r\n    let response = (await(await fetch(url, data)).json())\r\n    return response\r\n    \r\n  }\r\n  async DELETE(resource){\r\n    const token = localStorage.getItem(\"token\");\r\n        let bearer;\r\n        if (token === \"\") {\r\n            bearer = \"\";\r\n        } else {\r\n            bearer = `${token}`;\r\n        }\r\n\r\n        const data = {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-auth-token': bearer\r\n            }\r\n        }\r\n        const url = `${back.api.baseURL}${resource}`\r\n        let response = (await (await fetch(url, data)).json())\r\n        return response\r\n  }\r\n}\r\n\r\nexport default new crud();"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}